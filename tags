!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/data/data/com.termux/files/home/.config/plugin/nvim-conf/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$FZF_DEFAULT_COMMAND	plugin/shortcut/normal.fzf.vim	/^let $FZF_DEFAULT_COMMAND="find . -type f -not -path '*\/\\.git\/*' ! -path '*\/node_modules\/*'"$/;"	v
'	plugin/shortcut/visual.vim	/^vmap ' di'<Esc>pi$/;"	m
,f	plugin/shortcut/visual.vim	/^vmap ,f  <Plug>Neoformat$/;"	m
/	plugin/shortcut/visual.vim	/^vmap \/ y\/<C-R>"<CR> $/;"	m
0	coc-settings.json	/^    "cpp": ["c"],$/;"	s	array:snippets.extends.cpp
0	coc-settings.json	/^    "css": ["tailwind"],$/;"	s	array:snippets.extends.css
0	coc-settings.json	/^    "html": ["tailwind"],$/;"	s	array:snippets.extends.html
0	coc-settings.json	/^    "javascriptreact": ["javascript"],$/;"	s	array:snippets.extends.javascriptreact
0	coc-settings.json	/^    "sass": ["tailwind"]$/;"	s	array:snippets.extends.sass
0	coc-settings.json	/^    "scss": ["tailwind"],$/;"	s	array:snippets.extends.scss
0	coc-settings.json	/^    "typescript": ["javascript"],$/;"	s	array:snippets.extends.typescript
;	plugin/shortcut/normal.vim	/^nmap ; :$/;"	m
;;	insert.vim	/^imap ;; <Esc>:$/;"	m
<BS>	plugin/shortcut/normal.edit.vim	/^noremap <BS> v"_d$/;"	m
<BS>	plugin/shortcut/visual.vim	/^vmap <BS> "_d$/;"	m
<C-BS>	insert.vim	/^imap <C-BS> <Esc>bve"_di$/;"	m
<C-Del>	insert.vim	/^imap <C-Del> <Esc>bve"_di$/;"	m
<C-Space>/	insert.vim	/^imap <C-Space>\/ <Esc>\/$/;"	m
<C-Space><Space>da	insert.vim	/^imap <C-Space><Space>da <Esc>ggVG"+di$/;"	m
<C-Space><Space>dw	insert.vim	/^imap <C-Space><Space>dw <Esc>bve"+di$/;"	m
<C-Space><Space>n	insert.vim	/^imap <C-Space><Space>n <Esc>:bn<CR>i$/;"	m
<C-Space><Space>p	insert.vim	/^imap <C-Space><Space>p <Space><Esc>"+Pa$/;"	m
<C-Space><Space>ya	insert.vim	/^imap <C-Space><Space>ya <Esc>ggVG"+yi$/;"	m
<C-Space><Space>yw	insert.vim	/^imap <C-Space><Space>yw <Esc>ve"+yi$/;"	m
<C-Space>?	insert.vim	/^imap <C-Space>? <Esc>?$/;"	m
<C-Space>V	insert.vim	/^imap <C-Space>V <Esc>V$/;"	m
<C-Space>bf	insert.vim	/^imap <C-Space>bf <Esc>:bfirst<CR>i$/;"	m
<C-Space>bl	insert.vim	/^imap <C-Space>bl <Esc>:blast<CR>i$/;"	m
<C-Space>bn	insert.vim	/^imap <C-Space>bn <Esc>:badd<CR>i$/;"	m
<C-Space>bp	insert.vim	/^imap <C-Space>bp Esc>:bp<CR>i$/;"	m
<C-Space>da	insert.vim	/^imap <C-Space>da <Esc>ggVGdi$/;"	m
<C-Space>dw	insert.vim	/^imap <C-Space>dw <Esc>bvedi$/;"	m
<C-Space>f	insert.vim	/^imap <C-Space>f <Esc>:FZF<CR>$/;"	m
<C-Space>i	insert.vim	/^imap <C-Space>i <Esc>I$/;"	m
<C-Space>n	insert.vim	/^imap <C-Space>n <Esc>:tabnext<CR>i$/;"	m
<C-Space>p	insert.vim	/^imap <C-Space>p <Space><Esc>Pa$/;"	m
<C-Space>q	insert.vim	/^imap <C-Space>q <Esc>:wq$/;"	m
<C-Space>r	insert.vim	/^imap <C-Space>r <Esc><C-r>i$/;"	m
<C-Space>ra	insert.vim	/^imap <C-Space>ra <Esc>ggVG"_di$/;"	m
<C-Space>rl	insert.vim	/^imap <C-Space>rl <Esc>V"_di$/;"	m
<C-Space>t	insert.vim	/^imap <C-Space>t <Esc>:NERDTreeToggle<CR>$/;"	m
<C-Space>tf	insert.vim	/^nmap <C-Space>tf <Esc>:tabfirst<CR>i$/;"	m
<C-Space>tl	insert.vim	/^nmap <C-Space>tl <Esc>:tablast<CR>i$/;"	m
<C-Space>tn	insert.vim	/^imap <C-Space>tn <Esc>:tabnew<CR>i$/;"	m
<C-Space>tp	insert.vim	/^imap <C-Space>tp <Esc>:tabprevious<CR>i$/;"	m
<C-Space>u	insert.vim	/^imap <C-Space>u <Esc>ui$/;"	m
<C-Space>v	insert.vim	/^imap <C-Space>v <Esc><C-v>$/;"	m
<C-Space>ya	insert.vim	/^imap <C-Space>ya <Esc>ggVGyi$/;"	m
<C-Space>yw	insert.vim	/^imap <C-Space>yw <Esc>veyi$/;"	m
<C-[>	plugin/shortcut/insert.vim	/^imap <C-[> <Plug>(copilot-previous)$/;"	m
<C-]>	plugin/shortcut/insert.vim	/^imap <C-]> <Plug>(copilot-next)$/;"	m
<C-a>	insert.vim	/^imap <C-a> <Esc>A$/;"	m
<C-b>	plugin/setting/nerdThree.vim	/^nnoremap <silent> <C-b> :NERDTreeToggle<CR>$/;"	m
<C-h>	insert.vim	/^imap <C-h> <Esc>20zhi $/;"	m
<C-h>	plugin/shortcut/insert.vim	/^inoremap <C-h> <Left>$/;"	m
<C-h>	plugin/shortcut/normal.vim	/^map <C-h> 20zh$/;"	m
<C-j>	coc.vim	/^imap <C-j> <Plug>(coc-snippets-expand-jump)$/;"	m
<C-j>	coc.vim	/^vmap <C-j> <Plug>(coc-snippets-select)$/;"	m
<C-j>	insert.vim	/^imap <C-j> <Esc>10ji$/;"	m
<C-j>	plugin/shortcut/insert.vim	/^imap <C-j> <Down>$/;"	m
<C-j>	plugin/shortcut/normal.vim	/^map <C-j> 10j$/;"	m
<C-k>	insert.vim	/^imap <C-k> <Esc>10ki$/;"	m
<C-k>	plugin/shortcut/insert.vim	/^imap <C-k> <Up>$/;"	m
<C-k>	plugin/shortcut/normal.vim	/^map <C-k> 10k$/;"	m
<C-l>	coc.vim	/^imap <C-l> <Plug>(coc-snippets-expand)$/;"	m
<C-l>	insert.vim	/^imap <C-l> <Esc>20zli $/;"	m
<C-l>	plugin/shortcut/insert.vim	/^imap <C-l> <Right>$/;"	m
<C-l>	plugin/shortcut/normal.vim	/^map <C-l> 20zl$/;"	m
<C-p>	plugin/shortcut/normal.edit.vim	/^nmap <C-p> "+p$/;"	m
<C-s>	insert.vim	/^imap <C-s> <Esc>:w<CR>i$/;"	m
<C-v>	insert.vim	/^imap <C-v> <Esc>v$/;"	m
<Del>	plugin/shortcut/normal.edit.vim	/^noremap <Del> v"_d$/;"	m
<Del>	plugin/shortcut/visual.vim	/^vmap <Del> "_d$/;"	m
<Esc>	plugin/shortcut/insert.vim	/^imap <Esc> <Esc>$/;"	m
<Leader>tg	plugin/shortcut/normal.import.js.vim	/^nnoremap <Leader>tg <Plug>(JsGotoDefinition)$/;"	m
<Leader>ti	plugin/shortcut/normal.import.js.vim	/^nnoremap <Leader>ti <Plug>(JsFileImport)$/;"	m
<Leader>tl	plugin/shortcut/normal.import.js.vim	/^nnoremap <Leader>tl :call Jsgoto()<CR>$/;"	m
<Leader>ts	plugin/shortcut/normal.import.js.vim	/^nnoremap <Leader>ts <Plug>(SortJsFileImport)$/;"	m
<NUL>	coc.vim	/^inoremap <silent><expr> <NUL> coc#refresh()$/;"	m
<S-TAB>	coc.vim	/^inoremap <expr> <S-TAB> pumvisible() ? "\\<C-p>" : "\\<S-TAB>"$/;"	m
<SPACE>s	plugin/shortcut/visual.vim	/^vmap <SPACE>s y:s$/;"	m
<Space>"	plugin/shortcut/visual.vim	/^vmap <Space>" di"<Esc>pi$/;"	m
<Space>/	plugin/shortcut/visual.vim	/^vmap <Space>\/ <Space>c<Space>$/;"	m
<Space>d	plugin/shortcut/visual.vim	/^vmap <Space>d "+d$/;"	m
<Space>dc	plugin/shortcut/dir/normal.bassic.vim	/^nmap <Space>dc :cd ~\/.myconf\/<CR><CR>$/;"	m
<Space>dg	plugin/shortcut/dir/normal.bassic.vim	/^nmap <Space>dg :Cdg<CR><CR>$/;"	m
<Space>dm	plugin/shortcut/dir/normal.bassic.vim	/^nmap <Space>dm :cd ~\/web\/muryp-new<CR><CR>$/;"	m
<Space>dn	plugin/shortcut/dir/normal.bassic.vim	/^nmap <Space>dn :Cdn<CR><CR>$/;"	m
<Space>dv	plugin/shortcut/dir/normal.bassic.vim	/^nmap <Space>dv :cd ~\/.config\/nvim\/<CR><CR>$/;"	m
<Space>dw	plugin/shortcut/dir/normal.bassic.vim	/^nmap <Space>dw :cd ~\/web<CR><CR>$/;"	m
<Space>p	plugin/shortcut/visual.vim	/^vmap <Space>p "_d"+p$/;"	m
<Space>s	plugin/shortcut/visual.vim	/^vmap <Space>s y:%s \/<C-R>"\/$/;"	m
<Space>tb	plugin/shortcut/visual.vim	/^vmap <Space>tb dG<C-o>$/;"	m
<Space>tc	plugin/shortcut/visual.vim	/^vmap <Space>tc <Plug>VimwikiToggleListItem<CR>$/;"	m
<Space>vs	plugin/shortcut/visual.vim	/^vmap <Space>vs :VimwikiListChangeSymbolI $/;"	m
<Space>y	plugin/shortcut/visual.vim	/^vmap <Space>y "+y$/;"	m
<Space>{	plugin/shortcut/visual.vim	/^vmap <Space>{ di{<Esc>pi$/;"	m
<TAB>	coc.vim	/^inoremap <expr> <TAB> pumvisible() ? "\\<C-n>" : "\\<TAB>"$/;"	m
<TAB>	coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<c-space>	coc.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	coc.vim	/^inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()$/;"	m
<down>	coc.vim	/^inoremap <expr> <down> pumvisible() ? "\\<C-n>" : "\\<down>"$/;"	m
<leader>	plugin/setting/whichkey.vim	/^nnoremap <silent> <leader> :WhichKey ' '<CR>$/;"	m
<leader>	plugin/setting/whichkey.vim	/^vnoremap <silent> <leader> :WhichKeyVisual ' '<CR>$/;"	m
<leader>'	plugin/shortcut/normal.vim	/^nnoremap <leader>' :VimwikiToggleListItem<CR>$/;"	m
<leader>'	plugin/shortcut/visual.vim	/^vmap <leader>' :VimwikiToggleListItem<CR>$/;"	m
<leader>,	plugin/shortcut/normal.vim	/^nnoremap <leader>, :exec "e ".nvimplug."\/nvim-conf\/init.vim"<CR>:Cdn<CR>$/;"	m
<leader>-	plugin/shortcut/screen.vim	/^nmap <leader>- <C-w>s$/;"	m
<leader>/	plugin/shortcut/normal.vim	/^nmap <leader>\/ <leader>c<leader>$/;"	m
<leader><	plugin/shortcut/screen.vim	/^nmap <leader>< <C-w><$/;"	m
<leader><BS>	plugin/shortcut/normal.edit.vim	/^nmap <leader><BS> V"_d$/;"	m
<leader><Del>	plugin/shortcut/normal.edit.vim	/^nmap <leader><Del> V"_d$/;"	m
<leader><leader>f	plugin/shortcut/normal.fzf.vim	/^nmap <leader><leader>f :Rg<CR><CR>$/;"	m
<leader><leader>w	plugin/shortcut/normal.vim	/^nnoremap <leader><leader>w :e ~\/wiki\/development\/index.md<CR>$/;"	m
<leader>>	plugin/shortcut/screen.vim	/^nmap <leader>> <C-w>>$/;"	m
<leader>\\	plugin/shortcut/screen.vim	/^nmap <leader>\\ <C-w>v$/;"	m
<leader>a	plugin/shortcut/normal.vim	/^map <leader>a \$$/;"	m
<leader>ba	plugin/shortcut/normal.buffer.vim	/^nmap <leader>ba :Bda<CR>$/;"	m
<leader>bd	plugin/shortcut/normal.buffer.vim	/^nmap <leader>bd :bdelete<CR>$/;"	m
<leader>bf	plugin/shortcut/normal.buffer.vim	/^nmap <leader>bf :bfirst<CR>$/;"	m
<leader>bl	plugin/shortcut/normal.buffer.vim	/^nmap <leader>bl :blast<CR>$/;"	m
<leader>cw	plugin/shortcut/normal.vim	/^nmap <leader>cw V:s\/\\<\\(\\w\\)\\(\\w*\\)\\>\/\\u\\1\\L\\2\/g<CR>$/;"	m
<leader>da	plugin/shortcut/dir/normal.bassic.vim	/^nmap <leader>da ggVG"+d$/;"	m
<leader>dy	plugin/shortcut/dir/normal.bassic.vim	/^nmap <leader>dy bve"+d$/;"	m
<leader>e	plugin/shortcut/normal.vim	/^nmap <leader>e :NERDTreeToggle<CR>$/;"	m
<leader>f	plugin/shortcut/normal.fzf.vim	/^nmap <leader>f :FZF<CR>$/;"	m
<leader>ga	plugin/shortcut/normal.git.vim	/^nmap <leader>ga :Git add .<CR>$/;"	m
<leader>gc	plugin/shortcut/normal.git.vim	/^nmap <leader>gc :Gcheckfzf<CR> $/;"	m
<leader>gf	plugin/shortcut/normal.git.vim	/^nmap <leader>gf :GitFiles<CR>$/;"	m
<leader>gg	plugin/shortcut/normal.git.vim	/^nmap <leader>gg :GaddCommitPush $/;"	m
<leader>gh	plugin/shortcut/normal.git.vim	/^nmap <leader>gh :Ghelp<CR>$/;"	m
<leader>gl	plugin/shortcut/normal.git.vim	/^nmap <leader>gl :Gclog<CR>$/;"	m
<leader>gp	plugin/shortcut/normal.git.vim	/^nmap <leader>gp :Git pushall<CR>$/;"	m
<leader>gq	plugin/shortcut/normal.git.vim	/^nmap <leader>gq :wq<CR>$/;"	m
<leader>gs	plugin/shortcut/normal.git.vim	/^nmap <leader>gs :call Gaddcommit()<CR>$/;"	m
<leader>gtl	plugin/shortcut/normal.git.vim	/^nmap <leader>gtl :Git tag --list<CR>$/;"	m
<leader>gtt	plugin/shortcut/normal.git.vim	/^nmap <leader>gtt :Versioning $/;"	m
<leader>gv	plugin/shortcut/normal.git.vim	/^nmap <leader>gv :Gflowfzf<CR>$/;"	m
<leader>h	plugin/shortcut/screen.vim	/^nmap <leader>h <C-w>h$/;"	m
<leader>i	plugin/shortcut/normal.vim	/^map <leader>i ^$/;"	m
<leader>j	plugin/shortcut/screen.vim	/^nmap <leader>j <C-w>j$/;"	m
<leader>k	plugin/shortcut/screen.vim	/^nmap <leader>k <C-w>k$/;"	m
<leader>l	plugin/shortcut/screen.vim	/^nmap <leader>l <C-w>l$/;"	m
<leader>mc	plugin/shortcut/normal.modif.vim	/^nnoremap <leader>mc :!cp $/;"	m
<leader>md	plugin/shortcut/normal.modif.vim	/^nnoremap <leader>md :!mkdir $/;"	m
<leader>mr	plugin/shortcut/normal.modif.vim	/^nnoremap <leader>mr :call delete(expand('%'))<CR>:bdelete<CR>$/;"	m
<leader>mv	plugin/shortcut/normal.modif.vim	/^nnoremap <leader>mv :!mv $/;"	m
<leader>n	plugin/shortcut/normal.buffer.vim	/^nmap <leader>n :bn<CR>$/;"	m
<leader>p	plugin/shortcut/normal.buffer.vim	/^nmap <leader>p :bp<CR>$/;"	m
<leader>q	plugin/shortcut/normal.vim	/^nmap <leader>q :q<CR>$/;"	m
<leader>ra	plugin/shortcut/normal.edit.vim	/^nmap <leader>ra ggVG"_d$/;"	m
<leader>rb	plugin/shortcut/normal.edit.vim	/^nmap <leader>rb ve"_d$/;"	m
<leader>re	plugin/shortcut/normal.edit.vim	/^nmap <leader>re vb"_d$/;"	m
<leader>s	plugin/shortcut/normal.vim	/^nmap <leader>s :%s \/$/;"	m
<leader>u	plugin/shortcut/normal.vim	/^nnoremap <leader>u <C-^>$/;"	m
<leader>w	plugin/shortcut/normal.vim	/^nmap <leader>w :w<CR>:e<CR>$/;"	m
<leader>x	coc.vim	/^xmap <leader>x  <Plug>(coc-convert-snippet)$/;"	m
<leader>ya	plugin/shortcut/normal.edit.vim	/^nmap <leader>ya ggVG"+y$/;"	m
<leader>yy	plugin/shortcut/normal.edit.vim	/^nmap <leader>yy bve"+y$/;"	m
<leader>zc	plugin/shortcut/normal.fold.vim	/^nmap <leader>zc :set nofoldenable<CR>$/;"	m
<leader>zf	plugin/shortcut/normal.fold.vim	/^nmap <leader>zf vtazf$/;"	m
<leader>zt	plugin/shortcut/normal.fold.vim	/^nmap <leader>zt v%zf$/;"	m
<up>	coc.vim	/^inoremap <expr> <up> pumvisible() ? "\\<C-p>" : "\\<up>"$/;"	m
Bda	plugin/shortcut/command.vim	/^command! Bda %bdelete|edit#|bdelete#$/;"	c
BgHighlight	plugin/setting/bassic.vim	/^augroup BgHighlight$/;"	a
Cb	plugin/shortcut/dir/bassic.vim	/^command Cb cd ..$/;"	c
Cdg	plugin/shortcut/command.vim	/^command Cdg exec 'cd' fnameescape(fnamemodify(finddir('.git', escape(expand('%:p:h'), ' ') . ';'/;"	c
Cdn	plugin/shortcut/dir/bassic.vim	/^command Cdn cd %:h$/;"	c
Configuration Nvim for web Developer	README.md	/^## Configuration Nvim for web Developer$/;"	s
Dc	plugin/shortcut/dir/bassic.vim	/^command Dc cd ~\/.myconfig$/;"	c
De	plugin/shortcut/dir/bassic.vim	/^command De cd ~\/$/;"	c
Diaryadd	plugin/shortcut/command.vim	/^command Diaryadd source ~\/.config\/nvim\/app\/wiki.vim$/;"	c
Diarydir	plugin/shortcut/command.vim	/^command Diarydir e ~\/wiki\/private\/diary\/diary.wiki$/;"	c
Diarylink	plugin/shortcut/command.vim	/^command Diarylink VimwikiDiaryGenerateLinks$/;"	c
Dm	plugin/shortcut/dir/muryp.vim	/^command Dm cd ~\/zzz\/web\/muryp-new " default dir muryp$/;"	c
Dmc	plugin/shortcut/dir/muryp.vim	/^command Dmc cd ~\/zzz\/web\/muryp-new\/content " content$/;"	c
Dmcb	plugin/shortcut/dir/muryp.vim	/^command Dmcb cd ~\/zzz\/web\/muryp-new\/content\/blog " content blog$/;"	c
Dmcn	plugin/shortcut/dir/muryp.vim	/^command Dmcn cd ~\/zzz\/web\/muryp-new\/content\/note " content lms$/;"	c
Dmd	plugin/shortcut/dir/muryp.vim	/^command Dmd cd ~\/zzz\/web\/deploy-muryp-new\/ " deploy dir$/;"	c
Dmk	plugin/shortcut/dir/muryp.vim	/^command Dmk cd ~\/zzz\/web\/muryp-new.myconfig\/_default\/ " config$/;"	c
Dmsb	plugin/shortcut/dir/muryp.vim	/^command Dmsb cd ~\/zzz\/web\/muryp-new\/static\/blog-api " blog api$/;"	c
Dmsi	plugin/shortcut/dir/muryp.vim	/^command Dmsi cd ~\/zzz\/web\/muryp-new\/static\/img\/public " img$/;"	c
Dmsp	plugin/shortcut/dir/muryp.vim	/^command Dmsp cd ~\/zzz\/web\/muryp-new\/static\/pages-api " pages api$/;"	c
Dmss	plugin/shortcut/dir/muryp.vim	/^command Dmss cd ~\/zzz\/web\/muryp-new\/static\/script\/public " script$/;"	c
Dmt	plugin/shortcut/dir/muryp.vim	/^command Dmt cd ~\/zzz\/web\/muryp-new\/themes\/muryp " theme$/;"	c
Dmtp	plugin/shortcut/dir/muryp.vim	/^command Dmtp cd ~\/zzz\/web\/muryp-newt\/layouts\/partials " partial$/;"	c
Dmtpmh	plugin/shortcut/dir/muryp.vim	/^command Dmtpmh cd ~\/zzz\/web\/muryp-newtp\/main\/head\/ " head$/;"	c
Dmtps	plugin/shortcut/dir/muryp.vim	/^command Dmtps cd ~\/zzz\/web\/muryp-newtp\/script " script theme$/;"	c
Dsh	plugin/shortcut/dir/bassic.vim	/^command Dsh cd ~\/.ssh$/;"	c
Dw	plugin/shortcut/dir/muryp.vim	/^command Dw cd ~\/zzz\/web " dir web$/;"	c
Feature	README.md	/^### Feature$/;"	S	section:Configuration Nvim for web Developer
GaddCommitPush	plugin/funct/git.vim	/^command! -nargs=1 GaddCommitPush call GaddCommitPush(<f-args>)$/;"	c
GaddCommitPush	plugin/funct/git.vim	/^function GaddCommitPush(commit)$/;"	f
Gaddcommit	plugin/funct/git.vim	/^function Gaddcommit()$/;"	f
Gcheck	plugin/funct/git.vim	/^command! -nargs=1 Gcheck call Gcheck(<f-args>)$/;"	c
Gcheck	plugin/funct/git.vim	/^function! Gcheck(branch)$/;"	f
Gcheckfzf	plugin/shortcut/normal.git.vim	/^command! Gcheckfzf execute "call fzf#run({'source': 'source ".nvimplug."\/nvim-conf\/git-flow.sh/;"	c
GetGitBranch	plugin/style/statusline.vim	/^augroup GetGitBranch$/;"	a
Gflow	plugin/funct/git.vim	/^command! -nargs=1 Gflow call Gflow(<f-args>)$/;"	c
Gflow	plugin/funct/git.vim	/^function! Gflow(branch)$/;"	f
Gflowfzf	plugin/shortcut/normal.git.vim	/^command! Gflowfzf execute "call fzf#run({'source': 'source ".nvimplug."\/nvim-conf\/git-flow.sh'/;"	c
Ghelp	plugin/funct/git.vim	/^command! Ghelp execute "e ". nvimplug ."\/nvim-conf\/help\/git\/home.md" $/;"	c
Git	docs/bassic.md	/^## Git$/;"	s	chapter:miiain
Gpushall	plugin/funct/git.vim	/^command! Gpushall !eval "$(ssh-agent -s)" && ssh-add ~\/.ssh\/github && git pushall$/;"	c
Hb	plugin/shortcut/command.vim	/^command Hb tabnew ~\/.config\/plugin\/nvim-conf\/help\/vim\/bassic.md$/;"	c
Hc	plugin/shortcut/command.vim	/^command Hc tabnew ~\/.config\/plugin\/nvim-conf\/plugin\/shortcut\/command.vim$/;"	c
Help	plugin/shortcut/command.vim	/^command Help tabnew ~\/.config\/plugin\/nvim-conf\/help\/home.md$/;"	c
Hi	plugin/shortcut/command.vim	/^command Hi tabnew ~\/.config\/plugin\/nvim-conf\/plugin\/shortcut\/insert.vim$/;"	c
Hn	plugin/shortcut/command.vim	/^command Hn tabnew ~\/.config\/plugin\/nvim-conf\/plugin\/shortcut\/normal.vim$/;"	c
Hv	plugin/shortcut/command.vim	/^command Hv tabnew ~\/.config\/plugin\/nvim-conf\/plugin\/shortcut\/visual.vim$/;"	c
Install	README.md	/^### Install$/;"	S	section:Configuration Nvim for web Developer
Jsgoto	plugin/funct/js.vim	/^function! Jsgoto()$/;"	f
NerdThree	docs/bassic.md	/^## NerdThree$/;"	s	chapter:miiain
P	plugin/shortcut/visual.vim	/^vmap P "_dP$/;"	m
Penggunaan git fetch dan pull	help/git/bassic.md	/^# Penggunaan git fetch dan pull$/;"	c
Prettier	plugin/shortcut/command.vim	/^command Prettier CocCommand prettier.formatFile$/;"	c
Prettiern	plugin/shortcut/command.vim	/^command Prettiern Neoformat$/;"	c
Requirement	README.md	/^### Requirement$/;"	S	section:Configuration Nvim for web Developer
Rg	plugin/shortcut/normal.fzf.vim	/^command! -bang -nargs=* Rg$/;"	c
Sbassic	plugin/shortcut/command.vim	/^command Sbassic tabnew ~\/.config\/nvim\/conf\/init\/bassic.vim$/;"	c
Scoc	plugin/shortcut/command.vim	/^command Scoc tabnew ~\/.config\/nvim\/conf\/init\/tab-coc.vim$/;"	c
Shi	plugin/shortcut/command.vim	/^command Shi tabnew ~\/.config\/nvim\/conf\/style\/html.vim$/;"	c
Shi2	plugin/shortcut/command.vim	/^command Shi2 tabnew ~\/.config\/nvim\/conf\/style\/style.vim$/;"	c
Smain	plugin/shortcut/command.vim	/^command Smain tabnew ~\/.config\/nvim\/conf\/plug\/main.vim$/;"	c
StatuslineGitBranch	plugin/style/statusline.vim	/^function! StatuslineGitBranch()$/;"	f
Sthem	plugin/shortcut/command.vim	/^command Sthem tabnew ~\/.config\/nvim\/conf\/style\/them.vim$/;"	c
Swiki	plugin/shortcut/command.vim	/^command Swiki tabnew ~\/.config\/nvim\/conf\/init\/wiki.vim$/;"	c
Versioning	plugin/funct/git.vim	/^command! -nargs=* Versioning call Versioning(<f-args>)$/;"	c
Versioning	plugin/funct/git.vim	/^function! Versioning(ver, commit)$/;"	f
W1	plugin/shortcut/command.vim	/^command W1 e ~\/wiki\/development\/index.wiki$/;"	c
Wd	plugin/shortcut/command.vim	/^command Wd VimwikiIndex1$/;"	c
Wdoc	plugin/shortcut/command.vim	/^command Wdoc VimwikiIndex2$/;"	c
Wl	plugin/shortcut/command.vim	/^command Wl VimwikiUISelect$/;"	c
Wo	plugin/shortcut/command.vim	/^command Wo source ~\/.config\/nvim\/app\/wiki.vim$/;"	c
Wp	plugin/shortcut/command.vim	/^command Wp VimwikiIndex3$/;"	c
[	plugin/shortcut/visual.vim	/^vmap [ di[<Esc>pi$/;"	m
`	plugin/shortcut/visual.vim	/^vmap ` di`<Esc>pi$/;"	m
auto save	docs/bassic.md	/^## auto save $/;"	s	chapter:miiain
b:current_syntax	plugin/style/html.vim	/^let b:current_syntax = "html"$/;"	v
colors_name	tema/github.vim	/^let colors_name = "github"$/;"	v
cpp	coc-settings.json	/^    "cpp": ["c"],$/;"	a	object:snippets.extends
css	coc-settings.json	/^    "css": ["tailwind"],$/;"	a	object:snippets.extends
da	plugin/shortcut/normal.edit.vim	/^nmap da ggVGd$/;"	m
g:NERDAltDelims_java	plugin/setting/comment.vim	/^let g:NERDAltDelims_java = 1$/;"	v
g:NERDCommentEmptyLines	plugin/setting/comment.vim	/^let g:NERDCommentEmptyLines = 1$/;"	v
g:NERDCompactSexyComs	plugin/setting/comment.vim	/^let g:NERDCompactSexyComs = 1$/;"	v
g:NERDCreateDefaultMappings	plugin/setting/comment.vim	/^let g:NERDCreateDefaultMappings = 1$/;"	v
g:NERDCustomDelimiters	plugin/setting/comment.vim	/^let g:NERDCustomDelimiters = { 'c': { 'left': '\/**','right': '*\/' } }$/;"	v
g:NERDDefaultAlign	plugin/setting/comment.vim	/^let g:NERDDefaultAlign = 'left'$/;"	v
g:NERDSpaceDelims	plugin/setting/comment.vim	/^let g:NERDSpaceDelims = 1$/;"	v
g:NERDToggleCheckAllLines	plugin/setting/comment.vim	/^let g:NERDToggleCheckAllLines = 1$/;"	v
g:NERDTreeGitStatusUseNerdFonts	plugin/setting/nerdThree.vim	/^let g:NERDTreeGitStatusUseNerdFonts = 1 " you should install nerdfonts by yourself. default: 0$/;"	v
g:NERDTreeIgnore	plugin/setting/nerdThree.vim	/^let g:NERDTreeIgnore = []$/;"	v
g:NERDTreeMinimalUI	plugin/setting/nerdThree.vim	/^let g:NERDTreeMinimalUI = 1$/;"	v
g:NERDTreeShowHidden	plugin/setting/nerdThree.vim	/^let g:NERDTreeShowHidden = 1$/;"	v
g:NERDTreeStatusline	plugin/setting/nerdThree.vim	/^let g:NERDTreeStatusline = ''$/;"	v
g:NERDTrimTrailingWhitespace	plugin/setting/comment.vim	/^let g:NERDTrimTrailingWhitespace = 1$/;"	v
g:ackprg	plugin/setting/bassic.vim	/^let g:ackprg = 'ag --nogroup --nocolor --column'$/;"	v
g:auto_save	plugin/setting/bassic.vim	/^let g:auto_save = 1  " enable AutoSave on Vim startup$/;"	v
g:coc_snippet_next	coc.vim	/^let g:coc_snippet_next = '<c-j>'$/;"	v
g:coc_snippet_next	coc.vim	/^let g:coc_snippet_next = '<tab>'$/;"	v
g:coc_snippet_prev	coc.vim	/^let g:coc_snippet_prev = '<c-k>'$/;"	v
g:colors_name	plugin/style/main.vim	/^let g:colors_name = "darcula"$/;"	v
g:colors_name	tema/abstract.vim	/^let g:colors_name = "abstract"$/;"	v
g:currentmode	plugin/style/statusline.vim	/^let g:currentmode={$/;"	v
g:fzf_action	plugin/shortcut/normal.fzf.vim	/^let g:fzf_action = {$/;"	v
g:fzf_layout	plugin/shortcut/normal.fzf.vim	/^let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.9, 'relative': v:true } }$/;"	v
g:gitgutter_override_sign_column_highlight	plugin/style/main.vim	/^let g:gitgutter_override_sign_column_highlight = 0 " Tell git gutter to leave the background alo/;"	v
g:gitgutter_override_sign_column_highlight	tema/dracula.vim	/^let g:gitgutter_override_sign_column_highlight = 0 " Tell git gutter to leave the background alo/;"	v
g:indentLine_char_list	plugin/setting/bassic.vim	/^let g:indentLine_char_list = ['┆']$/;"	v
g:mapleader	plugin/setting/whichkey.vim	/^let g:mapleader = "\\<Space>"$/;"	v
g:markdown_fenced_languages	plugin/setting/bassic.vim	/^let g:markdown_fenced_languages = ['coffee', 'css', 'erb=eruby', 'javascript', 'js=javascript', /;"	v
g:vim_markdown_folding_disabled	plugin/setting/bassic.vim	/^let g:vim_markdown_folding_disabled = 1$/;"	v
g:vim_markdown_follow_anchor	plugin/setting/bassic.vim	/^let g:vim_markdown_follow_anchor = 1$/;"	v
g:vim_markdown_frontmatter	plugin/setting/bassic.vim	/^let g:vim_markdown_frontmatter = 1$/;"	v
g:vim_markdown_new_list_item_indent	plugin/setting/bassic.vim	/^let g:vim_markdown_new_list_item_indent = 2$/;"	v
g:vim_matchtag_enable_by_default	plugin/setting/bassic.vim	/^let g:vim_matchtag_enable_by_default = 0$/;"	v
g:vim_matchtag_files	plugin/setting/bassic.vim	/^let g:vim_matchtag_files = '*.html,*.xml,*.js,*.jsx,*.vue,*.svelte,*.jsp'$/;"	v
g:vimwiki_key_mappings	plugin/setting/wiki.vim	/^let g:vimwiki_key_mappings = {$/;"	v
g:vimwiki_list	plugin/setting/wiki.vim	/^let g:vimwiki_list = [{'path': '~\/vimwiki\/',$/;"	v
g:vimwiki_listsyms	plugin/setting/wiki.vim	/^let g:vimwiki_listsyms = ' .○◐●x'$/;"	v
g:which_key_hspace	plugin/setting/whichkey.vim	/^let g:which_key_hspace = 1$/;"	v
g:which_key_map	plugin/setting/whichkey.vim	/^let g:which_key_map =  {}$/;"	v
g:which_key_map	plugin/shortcut/dir/normal.bassic.vim	/^let g:which_key_map.d = {$/;"	v
g:which_key_map	plugin/shortcut/normal.buffer.vim	/^let g:which_key_map.b = {$/;"	v
g:which_key_map	plugin/shortcut/normal.buffer.vim	/^let g:which_key_map['n'] = [':bn','next ==>' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.buffer.vim	/^let g:which_key_map['p'] = [ ':bp'  , '<== prev' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.edit.vim	/^let g:which_key_map.r = {$/;"	v
g:which_key_map	plugin/shortcut/normal.edit.vim	/^let g:which_key_map.y = {$/;"	v
g:which_key_map	plugin/shortcut/normal.edit.vim	/^let g:which_key_map['<BS>'] = ['V"_d','delete one line' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.edit.vim	/^let g:which_key_map['<Del>'] = ['V"_d','delete one line' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.fold.vim	/^let g:which_key_map.z = {$/;"	v
g:which_key_map	plugin/shortcut/normal.fzf.vim	/^let g:which_key_map[' ']= {$/;"	v
g:which_key_map	plugin/shortcut/normal.fzf.vim	/^let g:which_key_map['f'] = [ ' f'  , 'Find file' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.git.vim	/^let g:which_key_map.g = {$/;"	v
g:which_key_map	plugin/shortcut/normal.import.js.vim	/^let g:which_key_map.t = {$/;"	v
g:which_key_map	plugin/shortcut/normal.modif.vim	/^let g:which_key_map['m']= {$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map["'"] = [':VimwikiToggleListItem','Togle list' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map[','] = [' ,','Go to Config' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['\/'] = [' c ','comment' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['cw'] = ['  cw','Word on line' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['e'] = [':NERDTree','File Explorer' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['q'] = [' q','quit' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['s'] = [' s','search' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['u'] = [' u','swich to file before' ]$/;"	v
g:which_key_map	plugin/shortcut/normal.vim	/^let g:which_key_map['w'] = ['w','Save' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['-'] = [ ' -'  , 'Split Horizontal' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['<'] = [ ' <'  , 'Size screen right' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['>'] = [ ' >'  , 'Size screen left' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['\\'] = [ ' \\'  , 'Split Vertical' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['h'] = [' h','go to screen left' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['j'] = [' j','go to screen down' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['k'] = [' k','go to screen top' ]$/;"	v
g:which_key_map	plugin/shortcut/screen.vim	/^let g:which_key_map['l'] = [' l','go to screen right' ]$/;"	v
g:which_key_position	plugin/setting/whichkey.vim	/^let g:which_key_position = 'botright'$/;"	v
g:which_key_sep	plugin/setting/whichkey.vim	/^let g:which_key_sep = '=>'$/;"	v
g:which_key_use_floating_win	plugin/setting/whichkey.vim	/^let g:which_key_use_floating_win = 0$/;"	v
git flow	help/git/flow.md	/^# git flow$/;"	c
html	coc-settings.json	/^    "html": ["tailwind"],$/;"	a	object:snippets.extends
insert	help/home.md	/^### insert$/;"	S
insert	help/more-shortcut.md	/^### insert$/;"	S	section:shortcut
javascriptreact	coc-settings.json	/^    "javascriptreact": ["javascript"],$/;"	a	object:snippets.extends
jj	plugin/shortcut/insert.vim	/^imap jj <Esc>$/;"	m
keymap	README.md	/^### keymap$/;"	S	section:Configuration Nvim for web Developer
main_syntax	plugin/style/html.vim	/^  let main_syntax = 'html'$/;"	v
mapleader	plugin/setting/comment.vim	/^let mapleader = " " " map leader to Space$/;"	v
mapleader	plugin/setting/whichkey.vim	/^let mapleader = " "$/;"	v
mapleader	plugin/shortcut/normal.vim	/^let mapleader = " "$/;"	v
miiain	docs/bassic.md	/^# miiain$/;"	c
myconfig	plugin/shortcut/normal.vim	/^let myconfig=plug_home."\/nvim-conf\/init.vim"$/;"	v
normal	help/more-shortcut.md	/^### normal$/;"	S	section:shortcut
p	plugin/setting/bassic.vim	/^xnoremap <buffer> p :<c-u>call <SID>Paste()<cr>$/;"	m
p	plugin/shortcut/visual.vim	/^vmap p "_dP$/;"	m
qq	insert.vim	/^imap qq <Esc>:q$/;"	m
qq	insert.vim	/^imap qq q<right>$/;"	m
qq	plugin/shortcut/normal.vim	/^nmap qq :q<CR>$/;"	m
s:Paste	plugin/setting/bassic.vim	/^function! s:Paste()$/;"	f
s:check_back_space	coc.vim	/^function! s:check_back_space() abort$/;"	f
s:cpo_save	plugin/style/html.vim	/^let s:cpo_save = &cpo$/;"	v
sass	coc-settings.json	/^    "sass": ["tailwind"]$/;"	a	object:snippets.extends
scss	coc-settings.json	/^    "scss": ["tailwind"],$/;"	a	object:snippets.extends
short by symbol	docs/bassic.md	/^## short by symbol$/;"	s	chapter:miiain
shortcut	docs/bassic.md	/^## shortcut$/;"	s	chapter:miiain
shortcut	help/more-shortcut.md	/^## shortcut$/;"	s
shortcut termux	docs/bassic.md	/^## shortcut termux$/;"	s	chapter:miiain
snippets.extends	coc-settings.json	/^  "snippets.extends": {$/;"	o
snippets.ultisnips.enable	coc-settings.json	/^  "snippets.ultisnips.enable": false,$/;"	b
sort by number	docs/bassic.md	/^## sort by number$/;"	s	chapter:miiain
sort by qwerty	docs/bassic.md	/^## sort by qwerty$/;"	s	chapter:miiain
source	docs/bassic.md	/^## source $/;"	s	chapter:miiain
tag versioning	help/git/versioning.md	/^# tag versioning$/;"	c
typescript	coc-settings.json	/^    "typescript": ["javascript"],$/;"	a	object:snippets.extends
ya	plugin/shortcut/normal.edit.vim	/^nmap ya ggVGy$/;"	m
